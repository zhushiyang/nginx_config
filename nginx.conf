# nginx work进程用户
user   nobody;
# 根据cpu的核数自动生成work进程树
worker_processes   auto;
# 启用多核CPU;
worker_cpu_affinity   auto;
# work进程打开最大文件数
worker_rlimit_nofile   65536;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#error_log  "pipe:rollback logs/error_log interval=1d baknum=7 maxsize=2G";


pid   /var/run/nginx.pid;


# event context
events {
   # 默认开启，解决惊群问题
   accept_mutex   on;
   # 使用epoll
   use   epoll;
   # 每个进程最大连接数（最大连接=连接数x进程数）
   worker_connections   20480;
}

# 四层负载均衡
stream {
    log_format proxy '$remote_addr [$time_local] '
             '$protocol $status $bytes_sent $bytes_received '
             '$session_time "$upstream_addr" '
             '"$upstream_bytes_sent" "$upstream_bytes_received" "$upstream_connect_time"';
    open_log_file_cache off;
    access_log /var/log/nginx/stream-access.log proxy;

    include streams/*.conf;
}

# 七层负载均衡
http {
   # 隐藏nginx版本号
   server_tokens off; 
   # 文件扩展名与文件类型映射表
   include   mime.types;
   log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

   #access_log  logs/access.log  main;
   #access_log  "pipe:rollback logs/access_log interval=1d baknum=7 maxsize=2G"  main;
   
   # 调整hash表，解决绑定域名过多问题
   server_names_hash_max_size  4096;
   server_names_hash_bucket_size   1024;
   variables_hash_max_size 4096;
   variables_hash_bucket_size 2048;
   # 默认文件类型
   default_type   text/html;
   # 设置编码格式utf-8
   charset   utf-8;
   # 当请求头部中有下划线时，认为请求有效
   underscores_in_headers   on;

   # 防止网络阻塞
   tcp_nopush   on;
   # 输出缓冲区
   tcp_nodelay   on;
   # 输出拆包大小
   output_buffers   4 32k;
   postpone_output   1460;
   # 缓冲区代理缓冲用户端请求的最大字节数
   client_header_buffer_size   128k;
   large_client_header_buffers   4 256k;
   # 客户端发送header超时
   client_body_timeout   30;
   # 发送到客户端超时
   send_timeout   30;
   # 注意：如果图片显示不正常把这个改成off。
   sendfile   on;
   # keepalive_timeout  60;
   keepalive_timeout   60;

   # 开启gzip压缩输出
   gzip   on;
   # 最小压缩文件大小
   gzip_min_length   1k;
   # 处理请求压缩的缓冲区数量和大小
   gzip_buffers   4 16k;
   # 设置健康检查共享内存
   check_shm_size 20M;  
   # 压缩类型，默认就已经包含textml，所以下面就不用再写了，写上去也不会有问题，但是会有一个warn
   gzip_types   text/plain application/x-javascript text/css application/xml;
   # 压缩比率，1代表压缩比最小处理速度最快，9压缩比最大但处理速度最慢（传输快但比较消耗cpu）
   gzip_comp_level   9;
   # 压缩通过代理的所有文件
   gzip_proxied   any;
   # vary header支持
   gzip_vary   on;
  
   include   proxy.conf;
   # server配置
   server {  
       listen 80 backlog=65535;
       # listen 8080 backlog=65535;
       # listen 443 ssl backlog=65535;
       # ssl_certificate ./ssl/xxx/xxx.crt;
       # ssl_certificate_key ./ssl/xxx/xxx.key;
       root   /dev/null;
       server_name   _;
       # nginx状态信息
       location = /stub_status {
           stub_status;
        }
       # upstream健康检查信息
       location = /check_status {
           check_status;
           access_log off;
           error_log off;
           # allow SOME.IP.ADD.RESS;
           # deny all;
       }
       # upsync show
       location /upstream_list {
           upstream_show;
       }
   }
   # 虚拟主机配置目录
   include vhosts/*.conf;
   # upstreams配置目录
   include upstreams/*.conf; 
}
